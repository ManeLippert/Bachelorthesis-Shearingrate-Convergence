#!/bin/sh
# Generate makefile dependencies for gkw .[fF]90 files
#
# - If a filename is passed to this script, any strings matching *.o in that
#   file will be taken as dependencies that need to be generated using source
#   files found in the same directory as that file.
# - If run without a filename, any file matching .*90 in the current directory
#   will be assumed to be needing dependencies to be generated.
#
# - IMPORTANT: This script only parses lowercase "use" and "include" statments 
#   and excludes preprocessor #includes
#
# - External modules and includes can therefore be excluded from the generated 
#   dependencies by using UPPERCASE in the Fortran source, e.g.
#     USE omp_lib
#     INCLUDE 'mpi.h'

# generate list of file prefixes from files having dependencies
if [ ! -z "$1" ]; then
    file_prefixes=`sed -e 's/[[:graph:]]*\.o/\#&\#/g' $1 | tr '\#' '\n' | grep '\.o' |  sed -e 's/\.o.*$//g' | sort | uniq`
    sourcedir=`dirname $1`
else
    file_prefixes=`ls | grep '\.[fF]90' | grep -E -v "#|~" | sed -e 's/\.[fF]90//g'`
    sourcedir="."
fi

echo "###### file generated by scripts/mkdeps ######"
echo ""
for i in $file_prefixes
do
    # If a "use somemodule" statement appears in a source module, put
    # "somemodule.o" into the list of object dependencies.
    k=$(grep  '^[[:space:]]*use ' $sourcedir/$i.*90 | sed -e 's/^[[:space:]]*use[[:space:]]*//' -e 's/[[:space:]]//g' -e 's/\,.*$//g' | sort | uniq | tr '\n' '.' | sed -e 's/\./\.o /g' )
  
    # If "include 'somefile.h'" appears in a source module, put
    # "somefile.h" into the list of included file dependencies.
    m=$(grep  '^[[:space:]]*include' $sourcedir/$i.*90 | sed -e 's/^[[:space:]]*include//g' -e "s/'//g" -e 's/[[:space:]]*//g' -e 's/\"//g' )
    echo "$i.o : $m $k" | sed 's/ mpi\.o//' 
done
