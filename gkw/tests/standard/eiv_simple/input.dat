! 
! This is a simple testcase for checking if the eigenvalue solver works.
! It asks just for one eigenvalue.
! Not converged in nperiod
! For a converged linear case, please use the STD_linear
&CONTROL
 lverbose = .true.,
 order_of_the_scheme = 'fourth_order'
 parallel_boundary_conditions = 'zero'
 NON_LINEAR = .false.
 zonal_adiabatic = .true.
 METHOD     = 'EIV'
 METH       = 1
 DTIM       = 1.0e-2
 NTIME      = 10000
 NAVERAGE   = 1
 nlapar     = .false.
 nlbpar     = .false.
 collisions = .false.
 disp_par   = 0.1
 disp_vp    = 0.1
 ltrapping_arakawa = .true.
 normalized = .true.
 max_seconds = 180
 io_format = 'ascii'
 io_testdata = .true.
 io_legacy = .true.
 silent = .false.
 ! matrix formats using external libraries may lead to eigenvalues in
 ! a different order. this testcase then appears as if it was broken.
 matrix_format = 'gkw-crs'
/
&GRIDSIZE
 NX = 1
 N_s_grid     = 32
 N_mu_grid    =  8
 n_vpar_grid  = 24
 NMOD         = 1
 nperiod      = 1
 number_of_species = 1
 N_procs_sp   = 1
 N_procs_s    = 4
 N_procs_mu   = 2
 N_procs_vpar = 2
/
&MODE
 CHIN     = 0.
 KTHRHO   = 0.5
 mode_box = .false.
/
&GEOM
 SHAT = 0.78
 Q    = 1.4
 EPS  = 0.19
/
&SPCGENERAL
 beta_ref = 0.0
 adiabatic_electrons = .true.
 finit    = "cosine2"
/
&SPECIES
 MASS  =  1.0
 Z     =  1.0
 TEMP  =  1.0
 DENS  =  1.0
 rlt   =  6.9
 rln   =  2.2
 uprim =  0.5
/
&SPECIES
 MASS  =  2.72e-4
 Z     = -1.0
 TEMP  =  1.0
 dens  =  1.0
 rlt   =  6.9
 rln   =  2.2
 uprim =  0.5
/
&ROTATION
 VCOR  = 0.1
/
&EIV_INTEGRATION
 max_iterations = 20000 ! (default=PETSC_DECIDE)
 tolerance = 5.0e-9
 number_eigenvalues = 1 ! (default=1)
 mat_vec_routine    = 1 ! (default=1)
 which_eigenvalues =  3
 growthrate = 1.81840E-01 ! this is the dominant mode the explicit solver finds
 freq       = 6.65354E-01 ! 
/
 &DIAGNOSTIC
!  xy_slice_ipar = 4,
!  lwrite_output1 = .true.,
!  lfinal_output  = .true.,
!  ! test diagnos_fluxes
 lcalc_fluxes    = .true.,
 lfluxes_spectra=.true.,
 lfluxes_em_spectra=.true.,
 xy_fluxes = .true.,
 xy_fluxes_bi = .true.,
 xy_fluxes_p = .true., 
 xy_fluxes_v = .true.,
 xy_fluxes_fsa = .true.,
 xy_fluxes_em = .true.,
 xy_fluxes_k = .true.,
 xy_fluxes_bpar = .true.,
!  ! test diagnos_fluxes_vspace
 lfluxes_detail=.true.,
 lfluxes_vspace=.true.,
 lfluxes_vspace_phi=.true.,
 lfluxes_vspace_em=.true.,
 lfluxes_vspace_bpar=.true.,
!  ! test diagnos_fields
 xy_phi = .true.,
 xy_apar = .true.,
 xy_bpar = .true.,
 xs_phi = .true.,
 nmodepoints = 1,
 imod_field  = 1,
 lparallel_phi=.true.,
 lparallel_apar=.true.,
 phi3d = .true.,
 spc3d = .true.,
 apa3d = .true.,
 apc3d = .true.,
 bpa3d = .true.,
 bpc3d = .true.,
!  zonal_scale_3d = 0.8,
! ! test diagnos_moments
 kykxs_moments = .true.
 kykxs_j0_moments = .true.
 kykxs_j1_moments = .true.
 xy_dens = .true.,
 xy_temp = .true.,
 xy_current = .true.,
 xy_current2 = .true.,
 den3d = .true.,
 ene3d = .true.,
!  !test diagnos_mode_struct
 lparallel_output = .true.,
 lrotate_parallel = .false.,
!  ! test diagnos_growth_freq
 lcalc_freq      = .true.,
 lamplitudes     = .true.,
 lgrowth_rates   = .true.,
 lfrequencies    = .true.,
!  ! from module diagnos_rad:
 lrad_moment = .true.
 lrad_field = .true.
 lrad_entropy = .true.
 lrad_tint = .true.
!  ! test diagnos_kinenergy_trappas
 lcalc_kinenergy_trappas = .true.
!  ! test diagnos_stresses
 lcalc_stresses  = .true.,
!  ! test diagnos_energetics
 lcalc_energetics  = .true.,
!  ! test diagnos_velspace
 psi_velspace    = 0,0,0,
 zeta_velspace   = 0,0,0,
 npointsvel      = 0
!  ! from module diagnos_corr:
!  lcalc_corr   = .true.,
!  imod_corr    = 5,10,
!  ! from module diagnos_zfshear:
!  lcalc_zfshear = .true.
 ! from module diagnos_cross_phase:
 cross_phases = 'dens', 'phi', 'T', 'phi', 'dens', 'T', 58*''
 cross_phase_timetrace = .false.
 /
