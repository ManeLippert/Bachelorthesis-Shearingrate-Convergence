#!/bin/bash
# 
# Wrapper script for the GKW input checker executable
#
# usage: gkw_check_input_new [-v] file1 file2 files*
#
#  verbose option flag -v gives all GKW output
#
# requires you to first build an input checker with
#    make checker
#
# looks for most recent suitable input_checker*.x in $GKW_HOME/run
# and checks all the named input files 
#

# need gkw home
if [ -z "${GKW_HOME}" ]; then
    echo "You need to set GKW_HOME!"
    exit 1
fi

if [[ $1 == '-v' ]]
 then
    echo More Verbose GKW output....
    verbose=1
    shift
 else 
    verbose=0
 fi

# find latest executable
CWD=`pwd`
HN=`uname -n | sed -e 's/\..*$//'`
my_executable=`ls -t ${GKW_HOME}/run/input_check*${HN:0:2}*.x | head -1`
if [ -z "${my_executable}" ]; then
    echo "No suitable input checker executables found for ${HN:0:2}"
    exit 1
fi

   echo "Running input checker: ${my_executable} "
   echo 

until [[ -z "$1" ]]; do

 FILE=$1

 if [ -f $FILE ]; then
   echo "####################################################################"
   echo "Checking file: ${FILE}"  
   TMP_DIR=/tmp/gkw_checker_${FILE}_33f2fsf2
   mkdir -p $TMP_DIR
   cp $FILE $TMP_DIR/input.dat
   cd $TMP_DIR
   # run the checker 
   if [[ $verbose -eq 1 ]]; then
   ( ${my_executable} || echo "error running ${my_executable}"; exit 1)
   else
   ( ${my_executable} | grep [A] || echo "error running ${my_executable}"; exit 1)
   fi   
   cd $CWD
   rm -rf $TMP_DIR
   
 else
   echo "####################################################################"
   echo Not a file: $FILE
 fi
 
 echo 

shift
done
